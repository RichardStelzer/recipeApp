-- DROP SCHEMA public;

CREATE SCHEMA public AUTHORIZATION pg_database_owner;

COMMENT ON SCHEMA public IS 'standard public schema';

-- DROP SEQUENCE public.t_category_id_seq;

CREATE SEQUENCE public.t_category_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE public.t_comment_id_seq;

CREATE SEQUENCE public.t_comment_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE public.t_country_id_seq;

CREATE SEQUENCE public.t_country_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE public.t_ingredient_id_seq;

CREATE SEQUENCE public.t_ingredient_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE public.t_measurement_quantity_id_seq;

CREATE SEQUENCE public.t_measurement_quantity_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE public.t_measurement_units_id_seq;

CREATE SEQUENCE public.t_measurement_units_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE public.t_recipe_id_seq;

CREATE SEQUENCE public.t_recipe_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE public.t_recipe_ingredient_id_seq;

CREATE SEQUENCE public.t_recipe_ingredient_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE public.t_user_id_seq;

CREATE SEQUENCE public.t_user_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE public.t_user_settings_id_seq;

CREATE SEQUENCE public.t_user_settings_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE public.textblock_id_seq;

CREATE SEQUENCE public.textblock_id_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;-- public.t_country definition

-- Drop table

-- DROP TABLE public.t_country;

CREATE TABLE public.t_country (
	id serial4 NOT NULL,
	first_created timestamp NOT NULL,
	first_created_by varchar NULL,
	last_adapted timestamp NULL,
	last_adapted_by varchar NULL,
	"name" varchar NULL,
	iso2 varchar NULL,
	iso3 varchar NULL,
	"numeric" int4 NULL,
	CONSTRAINT t_country_pk PRIMARY KEY (id)
);

-- Table Triggers

create trigger auto_insert_first_created before
insert
    on
    public.t_country for each row execute function insert_first_created();
create trigger auto_update_last_adapted before
update
    on
    public.t_country for each row execute function update_last_adapted();


-- public.t_measurement_quantity definition

-- Drop table

-- DROP TABLE public.t_measurement_quantity;

CREATE TABLE public.t_measurement_quantity (
	id serial4 NOT NULL,
	first_created timestamp NOT NULL,
	first_created_by varchar NULL,
	last_adapted timestamp NULL,
	last_adapted_by varchar NULL,
	quantity numeric NULL,
	CONSTRAINT t_measurement_quantity_pk PRIMARY KEY (id),
	CONSTRAINT t_measurement_quantity_unique UNIQUE (quantity)
);

-- Table Triggers

create trigger auto_insert_first_created before
insert
    on
    public.t_measurement_quantity for each row execute function insert_first_created();
create trigger auto_update_last_adapted before
update
    on
    public.t_measurement_quantity for each row execute function update_last_adapted();


-- public.t_measurement_unit definition

-- Drop table

-- DROP TABLE public.t_measurement_unit;

CREATE TABLE public.t_measurement_unit (
	id int4 DEFAULT nextval('t_measurement_units_id_seq'::regclass) NOT NULL,
	first_created timestamp NOT NULL,
	first_created_by varchar NULL,
	last_adapted timestamp NULL,
	last_adapted_by varchar NULL,
	unit varchar NULL,
	CONSTRAINT t_measurement_unit_unique UNIQUE (unit),
	CONSTRAINT t_measurement_units_pk PRIMARY KEY (id)
);

-- Table Triggers

create trigger auto_update_last_adapted before
update
    on
    public.t_measurement_unit for each row execute function update_last_adapted();
create trigger auto_insert_first_created before
insert
    on
    public.t_measurement_unit for each row execute function insert_first_created();


-- public.t_textblock definition

-- Drop table

-- DROP TABLE public.t_textblock;

CREATE TABLE public.t_textblock (
	id int4 DEFAULT nextval('textblock_id_seq'::regclass) NOT NULL,
	first_created timestamp NOT NULL,
	first_created_by varchar NULL,
	last_adapted timestamp NULL,
	last_adapted_by varchar NULL,
	"text" varchar NULL,
	CONSTRAINT textblock_pk PRIMARY KEY (id)
);

-- Table Triggers

create trigger auto_update_last_adapted before
update
    on
    public.t_textblock for each row execute function update_last_adapted();
create trigger auto_insert_first_created before
insert
    on
    public.t_textblock for each row execute function insert_first_created();


-- public.t_category definition

-- Drop table

-- DROP TABLE public.t_category;

CREATE TABLE public.t_category (
	id serial4 NOT NULL,
	first_created timestamp NOT NULL,
	first_created_by varchar NOT NULL,
	last_adapted timestamp NULL,
	last_adapted_by varchar NULL,
	"name" varchar NOT NULL,
	description_textblock_id int4 NULL,
	CONSTRAINT t_category_pk PRIMARY KEY (id),
	CONSTRAINT t_category_unique UNIQUE (name),
	CONSTRAINT t_category_t_textblock_fk FOREIGN KEY (description_textblock_id) REFERENCES public.t_textblock(id) ON UPDATE CASCADE
);

-- Table Triggers

create trigger auto_insert_first_created before
insert
    on
    public.t_category for each row execute function insert_first_created();
create trigger auto_update_last_adapted before
update
    on
    public.t_category for each row execute function update_last_adapted();


-- public.t_ingredient definition

-- Drop table

-- DROP TABLE public.t_ingredient;

CREATE TABLE public.t_ingredient (
	id serial4 NOT NULL,
	first_created timestamp NOT NULL,
	created_by varchar NULL,
	last_adapted timestamp NULL,
	last_adapted_by varchar NULL,
	"name" varchar NOT NULL,
	ingredient_description_textblock int4 NULL,
	name_plural varchar NULL,
	CONSTRAINT t_ingredient_pk PRIMARY KEY (id),
	CONSTRAINT t_ingredient_unique UNIQUE (name, name_plural),
	CONSTRAINT t_ingredient_t_textblock_fk FOREIGN KEY (ingredient_description_textblock) REFERENCES public.t_textblock(id) ON UPDATE CASCADE
);

-- Table Triggers

create trigger auto_insert_first_created before
insert
    on
    public.t_ingredient for each row execute function insert_first_created();
create trigger auto_update_last_adapted before
update
    on
    public.t_ingredient for each row execute function update_last_adapted();


-- public.t_comment definition

-- Drop table

-- DROP TABLE public.t_comment;

CREATE TABLE public.t_comment (
	id serial4 NOT NULL,
	first_created timestamp NOT NULL,
	first_created_by varchar NOT NULL,
	last_adapted timestamp NULL,
	last_adapted_by varchar NULL,
	author_user_id int4 NOT NULL,
	recipe_id int4 NOT NULL,
	comment_textblock_id int4 NOT NULL,
	CONSTRAINT t_comment_pk PRIMARY KEY (id)
);

-- Table Triggers

create trigger auto_update_last_adapted before
update
    on
    public.t_comment for each row execute function update_last_adapted();
create trigger auto_insert_first_created before
insert
    on
    public.t_comment for each row execute function insert_first_created();


-- public.t_recipe definition

-- Drop table

-- DROP TABLE public.t_recipe;

CREATE TABLE public.t_recipe (
	id serial4 NOT NULL,
	first_created timestamp NOT NULL,
	first_created_by varchar NULL,
	last_adapted timestamp NULL,
	last_adapted_by varchar NULL,
	title varchar NULL,
	description_textblock_id int4 NULL,
	author_user_id int4 NOT NULL,
	steps_textblock_id int4 NOT NULL,
	category_id int4 NULL,
	CONSTRAINT t_recipe_pk PRIMARY KEY (id),
	CONSTRAINT t_recipe_unique UNIQUE (category_id, steps_textblock_id, description_textblock_id, title)
);

-- Table Triggers

create trigger auto_insert_first_created before
insert
    on
    public.t_recipe for each row execute function insert_first_created();
create trigger auto_update_last_adapted before
update
    on
    public.t_recipe for each row execute function update_last_adapted();


-- public.t_recipe_ingredient definition

-- Drop table

-- DROP TABLE public.t_recipe_ingredient;

CREATE TABLE public.t_recipe_ingredient (
	recipe_id int4 NULL,
	ingredient_id int4 NULL,
	measurement_unit_id int4 NULL,
	measurement_quantity_id int4 NULL,
	id serial4 NOT NULL,
	first_created timestamp NOT NULL,
	first_created_by varchar NOT NULL,
	last_adapted timestamp NULL,
	last_adapted_by varchar NULL,
	CONSTRAINT t_recipe_ingredient_pk PRIMARY KEY (id),
	CONSTRAINT t_recipe_ingredient_unique UNIQUE (ingredient_id, measurement_unit_id, measurement_quantity_id, recipe_id)
);

-- Table Triggers

create trigger auto_update_last_adapted before
update
    on
    public.t_recipe_ingredient for each row execute function update_last_adapted();
create trigger auto_insert_first_created before
insert
    on
    public.t_recipe_ingredient for each row execute function insert_first_created();


-- public.t_user definition

-- Drop table

-- DROP TABLE public.t_user;

CREATE TABLE public.t_user (
	id serial4 NOT NULL,
	first_name varchar NULL,
	email varchar NOT NULL,
	"language" varchar NULL,
	country_id int4 NULL,
	user_settings_id int4 NULL,
	last_name varchar NOT NULL,
	first_created timestamp NULL,
	first_created_by varchar NULL,
	last_adapted timestamp NULL,
	last_adapted_by varchar NULL,
	CONSTRAINT t_user_pk PRIMARY KEY (id),
	CONSTRAINT t_user_unique UNIQUE (user_settings_id),
	CONSTRAINT t_user_unique_1 UNIQUE (email)
);

-- Table Triggers

create trigger auto_update_last_adapted before
update
    on
    public.t_user for each row execute function update_last_adapted();
create trigger auto_insert_first_created before
insert
    on
    public.t_user for each row execute function insert_first_created();


-- public.t_user_settings definition

-- Drop table

-- DROP TABLE public.t_user_settings;

CREATE TABLE public.t_user_settings (
	id serial4 NOT NULL,
	user_id int4 NOT NULL,
	preferred_language varchar NULL,
	preferred_email varchar NULL,
	first_created timestamp NULL,
	first_created_by varchar NULL,
	last_adapted timestamp NULL,
	last_adapted_by varchar NULL,
	CONSTRAINT t_user_settings_pk PRIMARY KEY (id),
	CONSTRAINT t_user_settings_unique UNIQUE (preferred_email, user_id)
);

-- Table Triggers

create trigger auto_update_last_adapted before
update
    on
    public.t_user_settings for each row execute function update_last_adapted();
create trigger auto_insert_first_created before
insert
    on
    public.t_user_settings for each row execute function insert_first_created();


-- public.t_comment foreign keys

ALTER TABLE public.t_comment ADD CONSTRAINT t_comment_t_recipe_fk FOREIGN KEY (recipe_id) REFERENCES public.t_recipe(id) ON UPDATE CASCADE;
ALTER TABLE public.t_comment ADD CONSTRAINT t_comment_t_textblock_fk FOREIGN KEY (comment_textblock_id) REFERENCES public.t_textblock(id) ON UPDATE CASCADE;
ALTER TABLE public.t_comment ADD CONSTRAINT t_comment_t_user_fk FOREIGN KEY (author_user_id) REFERENCES public.t_user(id) ON UPDATE CASCADE;


-- public.t_recipe foreign keys

ALTER TABLE public.t_recipe ADD CONSTRAINT t_recipe_t_user_fk FOREIGN KEY (author_user_id) REFERENCES public.t_user(id) ON UPDATE CASCADE;


-- public.t_recipe_ingredient foreign keys

ALTER TABLE public.t_recipe_ingredient ADD CONSTRAINT t_recipe_ingredient_t_ingredient_fk FOREIGN KEY (ingredient_id) REFERENCES public.t_ingredient(id) ON UPDATE CASCADE;
ALTER TABLE public.t_recipe_ingredient ADD CONSTRAINT t_recipe_ingredient_t_measurement_quantity_fk FOREIGN KEY (measurement_quantity_id) REFERENCES public.t_measurement_quantity(id) ON UPDATE CASCADE;
ALTER TABLE public.t_recipe_ingredient ADD CONSTRAINT t_recipe_ingredient_t_measurement_unit_fk FOREIGN KEY (measurement_unit_id) REFERENCES public.t_measurement_unit(id) ON UPDATE CASCADE;
ALTER TABLE public.t_recipe_ingredient ADD CONSTRAINT t_recipe_ingredient_t_recipe_fk FOREIGN KEY (recipe_id) REFERENCES public.t_recipe(id);


-- public.t_user foreign keys

ALTER TABLE public.t_user ADD CONSTRAINT t_user_t_country_fk FOREIGN KEY (country_id) REFERENCES public.t_country(id) ON UPDATE CASCADE;
ALTER TABLE public.t_user ADD CONSTRAINT t_user_t_user_settings_fk FOREIGN KEY (user_settings_id) REFERENCES public.t_user_settings(id) ON DELETE CASCADE ON UPDATE CASCADE;


-- public.t_user_settings foreign keys

ALTER TABLE public.t_user_settings ADD CONSTRAINT t_user_settings_t_user_fk FOREIGN KEY (user_id) REFERENCES public.t_user(id) ON UPDATE CASCADE;



-- DROP FUNCTION public.insert_first_created();

CREATE OR REPLACE FUNCTION public.insert_first_created()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
	BEGIN
		NEW.first_created := NOW();
		NEW.last_adapted := NOW();
		RETURN NEW;
	END;
$function$
;

-- DROP FUNCTION public.update_last_adapted();

CREATE OR REPLACE FUNCTION public.update_last_adapted()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
	BEGIN
		NEW.last_adapted := NOW();
		RETURN NEW;
	END;
	$function$
;